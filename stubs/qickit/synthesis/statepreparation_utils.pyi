import numpy as np
from numpy.typing import NDArray as NDArray
from qickit.types import Collection as Collection

def grayCode(x: int) -> int: ...
def alpha_y(angles: Collection[float], num_qubits: int, angle_index: int) -> float: ...
def M(k: int) -> NDArray[np.float64]: ...
def theta(M: NDArray[np.float64], alphas: list[float]) -> NDArray[np.float64]: ...
def ind(k: int) -> list[int]: ...
def bloch_angles(pair_of_complex: Collection[complex]) -> tuple: ...
def rotations_to_disentangle(local_param: Collection[complex]) -> tuple: ...
