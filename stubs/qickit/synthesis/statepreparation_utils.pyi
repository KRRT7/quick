from collections.abc import Sequence
import numpy as np
from numpy.typing import NDArray as NDArray
from qickit.types import Collection as Collection


def gray_code(index: int) -> int: ...
def compute_alpha_y(magnitude: Sequence[float], k: int, j: int) -> float: ...
def compute_alpha_z(phase: NDArray[np.float64], k: int, j: int) -> float: ...
def compute_m(k: int) -> NDArray[np.float64]: ...
def compute_control_indices(index: int) -> list[int]: ...
def bloch_angles(pair_of_complex: Collection[complex]) -> tuple: ...
def rotations_to_disentangle(local_param: Collection[complex]) -> tuple: ...
